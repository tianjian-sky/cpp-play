#include <iostream>

using namespace std;


/**
 * 存储持续性：
 * 1) 自动存储持续性：函数或代码块执行时创建，执行完后释放。
 * 2) 静态存储持续性：函数定义外static修饰，整个运行过程中存在
 * 3) 线程存储持续性：与线程一样长
 * 4) 动态存储持续性：使用new运算符分配后将一直存在，直到使用delete运算符将其释放，或者程序终止
*/

/**
 * 链接性： linkage
 * 
 * 外部： 可在文件间共享
 *  任何声明于命名空间作用域的下列名称拥有外部链接，除非命名空间无名或为无名命名空间所含有 (C++11 起)：
    未列于上的变量与函数（即不声明为 static 的函数、不声明为 static 的命名空间作用域非 const 变量，和所有声明为 extern 的变量）；
    枚举；
    类名、其成员函数、静态数据成员（不论是否 const ）、嵌套类及枚举，及首次以类体内的 friend 声明引入的函数；
    所有未列于上的模板名（即不声明为 static 的函数模板）。
    任何首次声明于块作用域的下列名称拥有外部链接：
    声明为 extern 的变量名；
    函数名。
 * 内部： 只能由一个文件中的函数共享
 *  任何声明于命名空间作用域的下列名称拥有内部链接：
    声明为static的变量、函数或函数模板；
    不是extern的，且先前未声明拥有外部链接的，非volatile非inline(C++17 起) const 限定变量（包含 constexpr）；
    匿名联合体的数据成员。
    另外，所有声明于无名命名空间或无名命名空间内的名称，即使是显式声明为 extern 者，均拥有内部链接。(C++11 起)
 * 无链接：
 * 任何声明于块作用域的下列名称无链接：
    不显式声明为 extern 的变量（无关乎 static 修饰符）；
    局部类与其成员函数；
    其他声明于块作用域的名称，例如 typedef 、枚举及枚举项。
*/


/**
 * 作用域：
 * 1) 局部作用域: 函数体，代码块
 * 2) 全局作用域：定义位置到文件结尾
 * 3) 函数原型作用域：包含参数列表的括号内可用
 * 4) 类作用域：类中声明的成员
 * 5) 名称空间作用域：名称空间中声明的变量
*/


int main () {

   return 0;
}