/**
 * C语言宏定义前面的 extension 是什么意思
 * https://docs.pingcode.com/ask/23824.html
 * 
 * 在 C 语言中，__extension__ 是一个编译器指令，用于告诉编译器对宏进行扩展时可以使用一些不符合 ANSI 标准的语法。这个指令通常用于避免编译器产生一些不必要的警告或错误信息。

    在 C 语言中，宏定义是一种预处理指令，用于将代码中的一些常量、函数或语句块定义为一个宏，以便在代码中多次使用。在扩展宏时，编译器会将宏的名称替换为宏定义中的代码。

    在一些情况下，编译器可能会对宏进行一些语法分析，以便检测代码中的错误或警告。然而，在某些情况下，宏的定义可能使用了一些非标准的语法，这可能会导致编译器发出不必要的警告或错误信息。

    为了避免这种情况，C 语言引入了 __extension__ 指令。这个指令告诉编译器，扩展宏时可以使用一些不符合 ANSI 标准的语法，从而避免产生不必要的警告或错误信息。通常，__extension__ 指令出现在宏定义前面，例如：
*/

#include <iostream>

using namespace std;

#define MY_MACRO(x) (__extension__((x) * 2))

int main () {
    cout << MY_MACRO(3) << endl;

}
